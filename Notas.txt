Conociendo que las clases es otro recurso más disponible en Javascript. ¿Cuando debemos crear una clase?

Las clases definen una forma de organizar datos repetibles y, por eso, debemos usarlas para evitar tener que repetir 
líneas de código que hacen referencia a la misma información.

En las clases no se llama lo que tiene adentro como variables sino como atributos o propiedades 
Ejemplo
class Cliente{
    nombreCliente;
    dniCliente;
    numeroCuenta;
    saldoCuenta;
}
const cliente1 = new Cliente();
cliente1.nombreCliente = "José";

Los metodos para una clase son los comportamientos, lo que va hacer. 

¿Qué aprendimos sobre los métodos/funciones de una clase?

Un método puede recibir cualquier cantidad de parámetros.
Un método puede estar definido sin parámetros, así como puede tener uno o más parámetros. Esa es la forma de pasarle 
información para que podamos reutilizar su funcionalidad en diferentes escenarios.

Función y método son sinónimos y nos ayudan a construir un vocabulario más rico dentro de nuestro sistema.
Usamos métodos para identificar los comportamientos que nuestra clase tiene. Eso facilita la comunicación dentro del 
equipo.

Un método define el comportamiento o la forma de realizar algo.
Ese es el objetivo de los métodos, definir qué acciones puede ejecutar un objeto. El comportamiento es implementado 
dentro del método.

Las clases tienen una operacion llamada constructor que se ejecuta al momento de crear la instancia. 


#Encapsulamiento.
En la clase Creamos métodos para proteger atributos e informaciones sensibles de nuestras clases. Sin embargo, si no 
hacemos nada, esta información aún queda expuesta y se puede cambiar manualmente.

Relacionado a la protección de atributos:

Por defecto en Javascript usamos el prefijo “_” para indicar que es un atributo privado y que no debe ser alterado 
manualmente.
A pesar de que no existe una limitación de sintaxis para cambiar la propiedad, si se realizan alteraciones manuales sobre 
atributos con ese prefijo se considera una mala práctica pues se estaría rompiendo el encapsulamiento de la clase.

Actualmente en Javascript ningún atributo o método es realmente privado.
 Javascript es un lenguaje de alcance abierto y por eso es posible visualizar cualquier atributo o propiedad de nuestra 
 clase.

Variables privadas dentro del codigo no se veran reflejadas al imprimirse y eso es claro ya que son privada.


Organizando el codigo.
Organizar un proyecto de manera correcta es de gran importancia, pues nos permite crecer de manera sostenida las 
funcionalidades, además de permitirnos encontrar las funcionalidades dentro del código de manera rápida.

Creamos módulos para compartir y reutilizar código entre los distintos archivos del proyecto, lo cual ayuda mucho en 
la organización del mismo.
En Javascript cada archivo es considerado un módulo y podemos escoger que exportar y que no exportar de él.

Para exportar e importar es necesario usar en la terminal el comando npm install y de ahi ir llenando a segun nuestras
necesidades lo que nos vaya pidiendo con esto obtendremos nuestro package.json